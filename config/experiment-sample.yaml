model_comment: 'experiment_sample'
db_user: 'xxxx'
db_password: 'xxxx'
db_name: 'xxxx'


random_seed: 23895478

user_metadata:
  label_definition: 'failed_inspection'
  experiment_type: 'test'
  author: 'Tim Hannifan'
  etl_date: '2019-05-23'

temporal_config:
    feature_start_time: '2014-01-01'
    feature_end_time: '2018-01-01'
    label_start_time: '2014-01-02'
    label_end_time: '2018-01-01'

    model_update_frequency: '1y'
    training_label_timespans: ['1month']
    training_as_of_date_frequencies: '1month'

    test_durations: '1y'
    test_label_timespans: ['1month']
    test_as_of_date_frequencies: '1month'

    max_training_histories: '5y'

# cohort_config:
#   query: |
#     with buckets as (
#     select *, ntile(5) over (order by number_of_inspections asc) as bucket
#     from (
#     select entity_id, count(*) as number_of_inspections
#     from semantic.events
#     group by entity_id
#     ) as t
#     )
#     select e.entity_id
#     from semantic.entities as e
#     inner join
#     buckets as b
#     using (entity_id)
#     where
#     daterange(start_time, end_time, '[]') @> '{as_of_date}'::date
#     and bucket in (5)
#   name: 'active_facilities'

label_config:
  query: |
    select
    entity_id,
    True::integer as outcome
    from semantic.events
    where '{as_of_date}'::timestamp <= date
    and date < '{as_of_date}'::timestamp + interval '{label_timespan}'
    group by entity_id
  include_missing_labels_in_train_as: False
  name: 'inspected'

grid_config:
    'sklearn.dummy.DummyClassifier':
        strategy: [most_frequent]
    'sklearn.ensemble.ExtraTreesClassifier':
        n_estimators: [5,5]
        criterion: [entropy]
        max_depth: [1,5]
        min_samples_split: [2,5]

feature_aggregations:
  -
    prefix: 'inspections'
    from_obj: 'semantic.events'
    knowledge_date_column: 'date'

    aggregates_imputation:
      count:
        type: 'zero_noflag'

    aggregates:
      -
        quantity:
          total: "*"
        metrics:
          - 'count'

    intervals: ['1month', '3month', '6month', '1y', 'all']

    groups:
      - 'entity_id'


  -
    prefix: 'risks'
    from_obj: 'semantic.events'
    knowledge_date_column: 'date'

    categoricals_imputation:
      sum:
        type: 'zero'
      avg:
        type: 'zero'

    categoricals:
      -
        column: 'risk'
        choices: ['low', 'medium', 'high']
        metrics:
          - 'sum'
          - 'avg'

    intervals: ['1month', '3month', '6month', '1y', 'all']

    groups:
      - 'entity_id'
      - 'zip_code'

  -
    prefix: 'results'
    from_obj: 'semantic.events'
    knowledge_date_column: 'date'

    categoricals_imputation:
      all:
        type: 'zero'

    categoricals:
      -
        column: 'result'
        choice_query: 'select distinct result from semantic.events'
        metrics:
          - 'sum'
          - 'avg'

    intervals:
      - '6month'

    groups:
      - 'entity_id'

feature_group_definition:
  prefix:
    - 'results'
    - 'risks'
    - 'inspections'

feature_group_strategies: ['all']

model_group_keys:
  - 'class_path'
  - 'parameters'
  - 'feature_names'
  - 'feature_groups'
  - 'cohort_name'
  - 'state'
  - 'label_name'
  - 'label_timespan'
  - 'training_as_of_date_frequency'
  - 'max_training_history'
  - 'label_definition'
  - 'experiment_type'
  - 'author'
  - 'etl_date'

scoring:
  testing_metric_groups:
    -
      metrics: ['precision@', 'recall@']
      thresholds:
        percentiles: [5.0, 10.0]
        top_n: [10, 25]
  training_metric_groups:
    -
      metrics: ['accuracy']
    -
      metrics: ['precision@', 'recall@']
      thresholds:
        percentiles: [10.0, 50.0, 99.9]
        top_n: [10, 25]
